{"version":3,"sources":["Mail.js","App.js","index.js"],"names":["dateFormat","require","Mail","key","messageSubject","messageSender","messageAt","messagePriority","messageContent","className","3","2","1","0","prototype","id","PropTypes","string","isRequired","App","state","isLoading","mail","messages","handleChange","e","console","log","target","value","setState","handleSubmit","preventDefault","getSearchMail","a","search","axios","get","token","jwt_decode","data","payload","contents","this","onSubmit","type","onChange","placeholder","inboxAlias","inboxId","Object","keys","map","inkey","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TAiBMA,EAAaC,EAAQ,IAE3B,SAASC,EAAT,GAOG,EANDC,IAME,IALFC,EAKC,EALDA,eACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,eAEA,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,gBAAd,SAAoCJ,GACpC,wBAAII,UAAU,iBACXT,EAAWM,EAAW,mCADzB,kBAzBU,CACdI,EAAG,eACHC,EAAG,SACHC,EAAG,SACHC,EAAG,UAuB2BN,IAE1B,uBAAGE,UAAU,iBAAiBD,KAKtCN,EAAKY,UAAY,CACfC,GAAIC,IAAUC,OAAOC,WACrBd,eAAgBY,IAAUC,OAAOC,WACjCb,cAAeW,IAAUC,OAAOC,WAChCZ,UAAWU,IAAUC,OAAOC,WAC5BX,gBAAiBS,IAAUC,OAAOC,WAClCV,eAAgBQ,IAAUC,OAAOC,YAEpBhB,QCiDAiB,E,4MAzFbC,MAAQ,CACNC,WAAW,EACXC,KAAM,GACNC,SAAU,GACVR,GAAI,I,EAGNS,aAAe,SAACC,GACdC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,EAAKC,SAAS,CAAEf,GAAIU,EAAEG,OAAOC,S,EAG/BE,aAAe,SAACN,GACdA,EAAEO,iBACF,EAAKC,iB,EAIPA,c,sBAAgB,oCAAAC,EAAA,yDACH,SACLC,EAAS,EAAKf,MAAML,GAC1BW,QAAQC,IAAI,SAAU,EAAKG,SAASf,IAHtB,SAOG,KAAXoB,EAPQ,gBAQV,EAAKL,SAAS,CAAER,KAAM,GAAID,WAAW,IAR3B,8BAUJN,EAAK,EAAKK,MAAML,GAVZ,UAWUqB,IAAMC,IAAN,2DACkCtB,IAZ5C,QAWJuB,EAXI,OAeJf,EAAWgB,IAAWD,EAAME,KAAKC,SAEjCC,EAAWnB,EAAQ,SACzB,EAAKO,SAAS,CAAER,KAAMC,EAAUF,WAAW,EAAOE,SAAUmB,IAlBlD,0DAqBZhB,QAAQC,IAAR,MArBY,0D,kEA0BdgB,KAAKV,kB,+BAGG,IAAD,EAC+BU,KAAKvB,MAAnCC,EADD,EACCA,UAAWC,EADZ,EACYA,KAAMC,EADlB,EACkBA,SAMzB,OAJAG,QAAQC,IAAIL,GAEZI,QAAQC,IAAIJ,GAGV,6BACGF,EACC,aAEA,0BAAMZ,UAAU,SAASmC,SAAUD,KAAKZ,cACtC,sCACA,2BACEtB,UAAU,UACVoC,KAAK,OACLhB,MAAOc,KAAKvB,MAAML,GAClB+B,SAAUH,KAAKnB,aACfuB,YAAY,mBAEd,0CAAgBzB,EAAK0B,YACrB,uCAAa1B,EAAK2B,SAElB,yBAAKxC,UAAU,SACZyC,OAAOC,KAAK5B,GAAU6B,KAAI,SAACC,GAAD,OACzB,kBAAC,EAAD,CACElD,IAAKmB,EAAK2B,QACV7C,eAAgBmB,EAAS8B,GAAOjD,eAChCC,cAAekB,EAAS8B,GAAOhD,cAC/BC,UAAWiB,EAAS8B,GAAO/C,UAC3BC,gBAAiBgB,EAAS8B,GAAO9C,gBACjCC,eAAgBe,EAAS8B,GAAO7C,2B,GAhFhC8C,IAAMC,WCJxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0da25e84.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n//Mail:メールの中身をrenderingするため\n\n//メールの緊急度判定\nconst checkPrioriy = (priority) => {\n  const planets = {\n    3: \"緊急\",\n    2: \"高\",\n    1: \"中\",\n    0: \"低\",\n  };\n  return planets[priority];\n};\n\n//Dateフォーマット変更\nconst dateFormat = require(\"dateformat\");\n\nfunction Mail({\n  key,\n  messageSubject,\n  messageSender,\n  messageAt,\n  messagePriority,\n  messageContent,\n}) {\n  return (\n    <div className=\"mail\">\n      <div className=\"mail__data\">\n        <h3 className=\"mail__title\">{messageSubject}</h3>\n        <h5 className=\"mail__sender\">from: {messageSender}</h5>\n        <h5 className=\"mail__getTime\">\n          {dateFormat(messageAt, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}\n          ・Priority:{checkPrioriy(messagePriority)}\n        </h5>\n        <p className=\"mail_contents\">{messageContent}</p>\n      </div>\n    </div>\n  );\n}\nMail.prototype = {\n  id: PropTypes.string.isRequired,\n  messageSubject: PropTypes.string.isRequired,\n  messageSender: PropTypes.string.isRequired,\n  messageAt: PropTypes.string.isRequired,\n  messagePriority: PropTypes.string.isRequired,\n  messageContent: PropTypes.string.isRequired,\n};\nexport default Mail;\n","import React from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport \"./App.css\";\nimport Mail from \"./Mail\";\n\n//mail:apiから取得したdic\n//messages:api中のメールメッセージ\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    mail: [],\n    messages: [],\n    id: \"\",\n  };\n\n  handleChange = (e) => {\n    console.log(e.target.value);\n    this.setState({ id: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.getSearchMail();\n  };\n\n  //APIをgetする処理\n  getSearchMail = async () => {\n    const id = \"123456\";\n    const search = this.state.id;\n    console.log(\"search\", this.setState.id);\n    //const search =\"this.state.value\";\n\n    try {\n      if (search === \"\") {\n        this.setState({ mail: [], isLoading: false });\n      } else {\n        const id = this.state.id;\n        const token = await axios.get(\n          `https://coding-assignment-v1.now.sh/api/v1/inbox/${id}`\n        );\n        //tokenをdecodeする処理\n        const messages = jwt_decode(token.data.payload);\n        //メールメッセージをget\n        const contents = messages[\"messages\"];\n        this.setState({ mail: messages, isLoading: false, messages: contents });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  componentDidMount() {\n    this.getSearchMail();\n  }\n\n  render() {\n    const { isLoading, mail, messages } = this.state;\n\n    console.log(mail);\n\n    console.log(messages);\n\n    return (\n      <div>\n        {isLoading ? (\n          \"Loading...\"\n        ) : (\n          <form className=\"search\" onSubmit={this.handleSubmit}>\n            <h1>Search</h1>\n            <input\n              className=\"keyword\"\n              type=\"text\"\n              value={this.state.id}\n              onChange={this.handleChange}\n              placeholder=\"Search Email..\"\n            />\n            <h5>inboxAlias:{mail.inboxAlias}</h5>\n            <h5>inboxId:{mail.inboxId}</h5>\n\n            <div className=\"mails\">\n              {Object.keys(messages).map((inkey) => (\n                <Mail\n                  key={mail.inboxId}\n                  messageSubject={messages[inkey].messageSubject}\n                  messageSender={messages[inkey].messageSender}\n                  messageAt={messages[inkey].messageAt}\n                  messagePriority={messages[inkey].messagePriority}\n                  messageContent={messages[inkey].messageContent}\n                />\n              ))}\n            </div>\n          </form>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}